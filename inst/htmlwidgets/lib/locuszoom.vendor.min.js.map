{"version":3,"sources":["d3.js","q.js"],"names":["d3","version","d3_arraySlice","slice","d3_array","list","call","d3_document","this","document","d3_documentElement","node","ownerDocument","documentElement","d3_window","defaultView","childNodes","nodeType","e","i","length","array","Array","Date","now","createElement","style","setProperty","error","d3_element_prototype","Element","prototype","d3_element_setAttribute","setAttribute","d3_element_setAttributeNS","setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","name","value","space","local","priority","d3_ascending","a","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","arguments","mid","right","ascending","descending","min","f","n","max","extent","c","sum","s","mean","j","quantile","values","p","H","h","Math","floor","v","median","numbers","push","sort","variance","d","m","deviation","apply","sqrt","d3_bisect","d3_zipLength","bisectLeft","bisect","bisectRight","bisector","shuffle","i0","i1","t","random","permute","indexes","permutes","pairs","p1","zip","zips","transpose","matrix","keys","map","key","entries","merge","arrays","merged","abs","d3_class","ctor","properties","Object","defineProperty","enumerable","d3_Map","_","create","range","start","stop","step","Infinity","Error","k","d3_range_integerScale","object","forEach","set","isArray","o","d3_map_proto","d3_map_zero","d3_map_escape","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","d3_vendorSymbol","charAt","toUpperCase","d3_vendorPrefixes","prefixName","has","get","remove","empty","nest","sortValues","rollup","sortKeys","mapType","depth","keyValue","setter","valuesByKey","sortKey","keyMap","order","add","behavior","rebind","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","listeners","listenerByName","event","l","z","on","listener","indexOf","concat","d3_eventPreventDefault","preventDefault","d3_eventSource","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","hasOwnProperty","requote","replace","d3_requote_re","d3_subclass","__proto__","property","d3_selection","groups","d3_selectionPrototype","d3_select","querySelector","d3_selectAll","querySelectorAll","d3_selectMatches","d3_selectMatcher","matches","Sizzle","matchesSelector","selection","select","d3_selection_selector","selector","d3_selection_selectorAll","subgroup","subnode","group","subgroups","parentNode","__data__","selectAll","d3_nsPrefix","svg","xhtml","xlink","xml","xmlns","d3_selection_attr","ns","qualify","removeAttributeNS","removeAttribute","d3_collapse","trim","d3_selection_classedRe","RegExp","d3_selection_classes","split","d3_selection_classed","d3_selection_classedName","re","classList","getAttribute","lastIndex","test","d3_selection_style","removeProperty","d3_selection_property","d3_selection_creator","createElementNS","namespace","namespaceURI","d3_selectionRemove","parent","removeChild","d3_selection_dataNode","data","d3_selection_filter","d3_selection_each","callback","d3_selection_enter","d3_selection_enterPrototype","prefix","attr","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","textContent","html","innerHTML","append","appendChild","insert","before","insertBefore","bind","groupData","nodeData","n0","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","update","enter","exit","datum","filter","next","nextSibling","comparator","args","d3_selection_on","capture","wrap","d3_selection_onListener","d3_selection_onFilters","onRemove","removeEventListener","$","d3_selection_onFilter","addEventListener","match","upgroup","j0","nodes","mouseenter","mouseleave","related","relatedTarget","compareDocumentPosition","d3_event_dragSelect","d3_event_dragId","d3_event_dragSuppress","click","w","suppressClick","off","setTimeout","mouse","container","d3_mousePoint","d3_mouse_bug44083","navigator","userAgent","changedTouches","ownerSVGElement","createSVGPoint","point","window","scrollX","scrollY","ctm","position","top","margin","padding","border","getScreenCTM","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","touch","touches","drag","origin","mousedown","dragstart","touchstart","id","subject","move","end","dragOffset","dragged","dragId","dragName","dragSubject","dx","dy","position1","position0","dragRestore","ε","ε2","π","PI","τ","τε","halfπ","d3_radians","d3_degrees","d3_sgn","d3_cross2d","d3_acos","acos","d3_asin","asin","d3_cosh","exp","d3_haversin","sin","ρ","SQRT2","interpolateZoom","p0","ux0","uy0","w0","ux1","uy1","w1","d2","d1","b0","b1","r0","log","dr","S","interpolate","coshr0","u","duration","zoom","translate0","center0","center","mousewheelTimer","touchtime","x0","x1","y0","y1","view","scaleExtent","d3_behavior_zoomInfinity","zooming","mousemove","mouseup","g","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","scaleTo","translateTo","zoomTo","that","__chart__","pow","transition","rescale","domain","invert","zoomstarted","zoomed","scale","translate","zoomended","location0","d3_selection_interrupt","scale0","locations0","distance0","zoomName","touchmove","touchend","targets","relocate","started","moved","ended","changed","LN2","q","l0","l1","distance1","scale1","clearTimeout","d3_behavior_zoomDelta","shiftKey","ceil","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","tween","cx","cy","copy","d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","color","toString","rgb","d3_hslPrototype","hsl","d3_hsl_rgb","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab_hcl","d3_lab","d3_rgb_lab","r","brighter","darker","d3_hclPrototype","hcl","d3_hcl_lab","cos","d3_lab_K","lab","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_labPrototype","d3_lab_rgb","d3_xyz_rgb","d3_lab_xyz","atan2","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgbPrototype","d3_rgb_hex","format","toLowerCase","exec","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","xhr","headers","request","XMLHttpRequest","responseType","respond","result","status","responseText","load","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","functor","dsv","delimiter","reFormat","delimiterCode","charCodeAt","row","typedResponse","parse","formatRow","formatValue","join","parseRows","Function","JSON","stringify","eol","EOL","EOF","rows","N","I","token","formatRows","fieldSet","fields","field","csv","tsv","d3_timer_queueHead","d3_timer_queueTail","d3_timer_interval","d3_timer_timeout","d3_timer_active","d3_timer_frame","d3_timer_step","d3_timer_mark","delay","d3_timer_sweep","isFinite","t0","t1","time","d3_format_precision","LN10","timer","then","flush","d3_formatPrefixes","symbol","formatPrefix","precision","d3_format_re","d3_format_types","String","fromCharCode","X","toPrecision","toExponential","toFixed","d3_format_typeDefault","d3_time","d3_date","d3_date_utc","UTC","getDate","getUTCDate","getDay","getUTCDay","getFullYear","getUTCFullYear","getHours","getUTCHours","getMilliseconds","getUTCMilliseconds","getMinutes","getUTCMinutes","getMonth","getUTCMonth","getSeconds","getUTCSeconds","getTime","getTimezoneOffset","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setFullYear","setUTCFullYear","setHours","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","d3_time_interval","number","date","d0","offset","dt","times","utc","d3_time_interval_utc","year","day","years","days","dayOfYear","interval","week","sunday","weeks","weekOfYear","sundayOfYear","d3_time_formatPads","-","0","d3_time_numberRe","d3_time_percentRe","d3_time_formatPad","fill","width","sign","string","d3_time_formatRe","names","d3_time_formatLookup","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberSunday","U","d3_time_parseWeekNumberMonday","W","d3_time_parseFullYear","d3_time_parseYear","d3_time_parseZone","Z","d3_time_parseMonthNumber","d3_time_parseDay","d3_time_parseDayOfYear","d3_time_parseHour24","d3_time_parseMinutes","M","d3_time_parseSeconds","d3_time_parseMilliseconds","L","d3_time_zone","zs","zh","zm","d3_time_parseLiteralPercent","d3_time_formatMulti","formats","locale","numberFormat","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","reverse","specifier","align","zfill","comma","suffix","integer","exponent","zcomma","fullSuffix","negative","unit","after","lastIndexOf","timeFormat","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","d3_time_format","template","d3_time_formats","d3_time_parse","localZ","d3_time_parsers","multi","d3_time_periodLookup","d3_time_dayRe","d3_time_dayLookup","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_monthRe","d3_time_monthLookup","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","A","B","mondayOfYear","Y","%","d3_locale_timeFormat","d3_locale_enUS","d3_adder","geo","d3_adderSum","d3_adderTemp","reset","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","stream","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","sphere","Point","coordinates","MultiPoint","LineString","d3_geo_streamLine","MultiLineString","Polygon","d3_geo_streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","area","d3_geo_areaSum","d3_geo_area","d3_geo_centroidW0","d3_geo_centroidW1","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_areaRingSum","d3_geo_areaRingStart","λ00","φ00","λ0","cosφ0","sinφ0","nextPoint","λ","φ","dλ","sdλ","adλ","cosφ","sinφ","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","bounds","φ0","λ1","φ1","λ_","λ__","φ__","dλSum","ranges","bound","ringPoint","ringStart","ringEnd","linePoint","normal","inflection","λi","antimeridian","φi","angle","compareRanges","withinRange","best","centroid","d3_geo_centroid","d3_geo_centroidPoint","d3_geo_centroidLineStart","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","d3_geo_centroidPointXYZ","z0","cz","d3_geo_compose","compose","d3_true","d3_geo_clipPolygon","segments","clipStartInside","clip","segment","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","points","current","isSubject","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","line","rotatedClipStart","pointRing","polygon","meridian","parallel","meridianNormal","polarAngle","winding","ring","point0","arc","intersection","φarc","d3_geo_pointInPolygon","polygonStarted","d3_geo_clipSort","pointLine","buffer","d3_geo_clipBufferListener","ringListener","clean","ringSegments","pop","shift","d3_geo_clipSegmentLength1","lines","rejoin","d3_geo_clipAntimeridian","sλ0","cosφ1","sinλ0_λ1","sλ1","atan","from","to","direction","d3_geom_clipLine","ax","ay","d3_geo_clipExtentMAX","d3_geo_clipExtent","x__","y__","v__","x_","y_","v_","first","listener_","bufferListener","wn","insidePolygon","inside","visible","a1","corner","comparePoints","ca","cb","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","C","ρ0","forward","ρ0_y","clipExtent","output","valid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathAreaPolygon","d3_geo_pathBoundsX0","d3_geo_pathBoundsY0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY1","d3_geo_pathArea","d3_geo_pathAreaRingStart","x00","y00","d3_geo_pathBounds","d3_geo_pathBuffer","pointCircle","d3_geo_pathBufferCircle","pointLineStart","lineEndPolygon","pointRadius","radius","d3_geo_lengthSum","d3_geo_pathCentroid","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","δ2","cosMinDistance","maxDepth","resample","a00","b00","c00","a0","c0","resampleLineTo","d3_geo_transformPoint","c1","φ2","λ2","x2","y2","dx2","dy2","dz","d3_geo_transform","d3_geo_projection","projectRotate","δx","δy","projectResample","δλ","δφ","δγ","preclip","postclip","clipAngle","projection","d3_geo_rotation","invalidate","d3_geo_projectionRadians","cr","smallRadius","notHemisphere","v0","v00","point2","point1","code","intersect","d3_geo_circleInterpolate","two","n1","n2","n2n2","n1n2","determinant","c2","n1xn2","uu","t2","polar","q1","d3_geo_clipCircle","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","path","projectStream","contextStream","cacheStream","transform","methods","projectionMutator","equirectangular","circle","distance","Δλ","sinΔλ","cosΔλ","sinφ1","graticule","X1","X0","Y1","Y0","DX","DY","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","d3_geo_conicConformal","F","d3_geo_mercator","d3_geo_conicEquidistant","G","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","d3_geo_mercatorProjection","clipAuto","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","stereographic","transverseMercator","geom","vertices","fx","fy","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","input","d3_geom_voronoiEdges","d3_geom_voronoiCells","d3_geom_voronoiBeaches","d3_geom_voronoiFirstCircle","d3_geom_voronoiCircles","d3_geom_voronoiBeachPool","d3_geom_voronoiCirclePool","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiRemoveBeach","vertex","previous","P","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","lSite","bx","by","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ha","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","d3_geom_voronoiEdge","d3_geom_voronoiHalfEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","splice","d3_geom_voronoiClipEdges","cell","iHalfEdge","halfEdges","nHalfEdges","cells","iCell","prepare","d3_geom_voronoiCloseCells","diagram","grandpa","uncle","sibling","voronoi","d3_geom_voronoiClipExtent","polygons","links","triangles","s0","s1","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","delaunay","quadtree","compat","xs","ys","x1_","y1_","x2_","y2_","leaf","nx","ny","insertChild","nPoint","xm","ym","below","root","visit","d3_geom_quadtreeVisit","sx","sy","children","find","minDistance2","distance2","closestPoint","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolators","d3_interpolateArray","na","nb","interpolateArray","d3_ease_default","d3_ease","linear","poly","quad","d3_ease_quad","cubic","d3_ease_cubic","d3_ease_sin","d3_ease_exp","d3_ease_circle","elastic","back","bounce","d3_ease_bounce","d3_ease_mode","in","out","d3_ease_reverse","in-out","d3_ease_reflect","out-in","d3_ease_cubicInOut","t3","d3_interpolateRound","d3_transform","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","skew","ease","interpolateHcl","ah","ac","al","bh","bc","bl","interpolateHsl","as","interpolateLab","aa","ba","interpolateRound","baseVal","consolidate","d3_transformIdentity","d3_interpolateTransform","ta","tb","ra","rb","wa","wb","ka","kb","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","aNodes","d3_layout_bundleAncestors","bNodes","aNode","bNode","sharedNode","d3_layout_bundleLeastCommonAncestor","ancestors","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","interpolateTransform","layout","bundle","paths","chord","chords","sortGroups","sortSubgroups","sortChords","relayout","groupSums","groupIndex","subgroupIndex","di","dj","subindex","startAngle","endAngle","resort","force","alpha","distances","strengths","charges","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","charge","chargeDistance2","d3_layout_forceChargeDistance2","gravity","theta2","repulse","dw","dn","pointCharge","dragmove","resume","tick","weight","d3_layout_forceAccumulate","chargeDistance","theta","neighbors","dimension","candidates","d3_layout_hierarchyRebind","hierarchy","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","stack","childs","revalue","partition","pie","Number","d3_layout_pieSortByValue","padAngle","da","pa","arcs","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","d3_layout_stackMaxIndex","sums","d3_layout_stackReduceSum","bottom","tops","bottoms","default","silhouette","wiggle","s2","s3","o0","expand","zero","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","d3_layout_packSiblings","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","d3_layout_packUnlink","db","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","histogram","frequency","valuer","ranger","binner","bin","bins","thresholds","pack","d3_layout_packTransform","separation","nodeSize","root0","root1","node1","queue","wrapTree","firstWalk","secondWalk","sizeNode","tx","siblings","d3_layout_treeShift","midpoint","ancestor","vip","vop","vim","vom","sip","sop","sim","som","apportion","cluster","previousNode","d3_layout_clusterLeft","d3_layout_clusterRight","treemap","stickies","pad","sticky","mode","ratio","squarify","score","remaining","worst","stickify","rmax","rmin","padConstant","µ","σ","logNormal","bates","irwinHall","d3_scale_niceIdentity","d3_scale_polylinear","d3_scale_linearRebind","d3_scale_linearNice","d3_scale_linearTickRange","span","err","d3_scale_linearTicks","d3_scale_linearTickFormat","d3_scale_linearPrecision","d3_scale_linearFormatSignificant","d3_scale_linear","clamp","rangeRound","ticks","tickFormat","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_powPow","d3_scale_pow","powp","powb","ordinal","d3_scale_ordinal","rangeBand","steps","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","d3_zero","d3_scale_quantile","quantiles","invertExtent","quantize","d3_scale_quantize","threshold","d3_scale_threshold","identity","d3_scale_identity","innerRadius","d3_svg_arcInnerRadius","outerRadius","d3_svg_arcOuterRadius","cornerRadius","padRadius","d3_svg_arcAuto","d3_svg_arcStartAngle","d3_svg_arcEndAngle","d3_svg_arcPadAngle","cw","rc","circleSegment","rp","ap","d3_svg_arcSweep","h1","h0","oc","kc","lc","rc1","t30","d3_svg_arcCornerTangents","t12","rc0","t03","t21","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","defined","d3_svg_lineLinear","interpolateKey","tension","d3_svg_lineInterpolators","linear-closed","step-before","d3_svg_lineStepBefore","step-after","d3_svg_lineStepAfter","basis","d3_svg_lineBasis","basis-open","pi","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","basis-closed","cardinal","d3_svg_lineHermite","d3_svg_lineCardinalTangents","cardinal-open","cardinal-closed","monotone","tangents","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","lp","p2","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineRadial","d3_svg_area","interpolateReverse","points0","points1","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","radial","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionNamespace","d3_transitionInherit","d3_transitionNode","d3_transition","interrupt","d3_selection_interruptNS","lock","active","count","d3_transitionPrototype","d3_transition_tween","d3_transition_text","inherit","elapsed","tweened","subnodes","nameNS","attrNull","attrNullNS","attrTween","styleNull","styleTween","inheritId","id0","id1","axis","tickFormat_","orient","d3_svg_axisDefaultOrient","innerTickSize","outerTickSize","tickPadding","tickArguments_","tickValues","tickTransform","tickEnter","tickExit","tickUpdate","tickSpacing","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","d3_svg_axisX","d3_svg_axisY","d3_svg_axisOrients","tickSize","tickSubdivide","brush","xExtentDomain","yExtentDomain","xExtent","yExtent","xClamp","yClamp","resizes","d3_svg_brushResizes","brushstart","background","resize","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","eventTarget","event_","resizing","resizingX","resizingY","dragging","keyCode","brushmove","brushend","ex","ey","altKey","move1","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","d3_time_formatIsoNative","toISOString","d3_time_scale","tickMethod","d3_time_scaleSteps","d3_time_scaleMilliseconds","d3_time_scaleDate","skip","skipped","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","d3_json","d3_html","createRange","selectNode","body","createContextualFragment","json","responseXML","define","amd","module","exports","definition","bootstrap","ses","ok","makeQ","global","previousQ","Q","noConflict","hasStacks","qFileName","qStartingLine","captureLine","noop","nextTick","head","task","tail","flushing","requestTick","isNodeJS","laterQueue","runSingle","process","setImmediate","MessageChannel","channel","port1","onmessage","requestPortTick","port2","postMessage","runAfter","uncurryThis","QReturnValue","array_slice","array_reduce","TypeError","array_indexOf","array_map","thisp","collect","undefined","object_create","Type","object_hasOwnProperty","object_keys","object_toString","ReturnValue","STACK_JUMP_SEPARATOR","makeStackTraceLong","promise","stacks","concatedStacks","stackString","desiredLines","isInternalFrame","stackLine","filterStackString","getFileNameAndLineNumber","attempt1","attempt2","attempt3","fileNameAndLineNumber","fileName","lineNumber","qEndingLine","Promise","isPromiseAlike","deferred","defer","resolve","reject","notify","exception","fulfill","resolvedPromise","messages","progressListeners","promiseDispatch","op","operands","nearerValue","nearer","isPromise","inspect","state","longStackSupport","become","newPromise","message","reason","progressListener","resolver","race","answerPs","len","descriptor","fallback","inspected","when","fulfilled","rejected","progressed","env","Q_DEBUG","makeNodeResolver","all","passByCopy","spread","makePromise","done","_fulfilled","newException","_rejected","newValue","threw","tap","fcall","thenResolve","thenReject","isPending","isFulfilled","isRejected","alternative","unhandledReasons","unhandledRejections","reportedUnhandledRejections","trackUnhandledRejections","resetUnhandledRejections","rejection","at","emit","atReport","untrackRejection","rhs","delete","post","promises","pendingCount","snapshot","any","prev","allResolved","getUnhandledReasons","stopUnhandledRejectionTracking","master","isDef","async","makeGenerator","continuer","verb","arg","StopIteration","generator","errback","spawn","promised","del","mapply","mcall","invoke","fapply","fbind","console","warn","allSettled","regardless","fail","fin","onUnhandledError","timeout","ms","timeoutId","nfapply","nodeArgs","nfcall","nfbind","denodeify","baseArgs","nbind","nmapply","npost","nsend","nmcall","ninvoke","nodeify","nodeback"],"mappings":"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","file":"locuszoom.vendor.min.js","sourcesContent":["!function() {\n  var d3 = {\n    version: \"3.5.6\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0) {\n        prefix = name.slice(0, i);\n        name = name.slice(i + 1);\n      }\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n            exitNodes[i] = node;\n          } else {\n            nodeByKeyValue.set(keyValue, node);\n          }\n          keyValues[i] = keyValue;\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = nodes;\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged && d3.event.target === target);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n    function interpolate(t) {\n      var s = t * S;\n      if (dr) {\n        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      }\n      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n    }\n    interpolate.duration = S * 1e3;\n    return interpolate;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: +_\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged && d3.event.target === target);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    format = format.toLowerCase();\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format);\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      f: false,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  };\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now();\n    d3_timer_active = d3_timer_queueHead;\n    while (d3_timer_active) {\n      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n      d3_timer_active = d3_timer_active.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.f) {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      } else {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n      s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: 1,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: 3,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    } else {\n      s.push(\"\");\n    }\n    if (ra != rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(s.pop() + \"rotate(\" + rb + \")\");\n    }\n    if (wa != wb) {\n      q.push({\n        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(s.pop() + \"skewX(\" + wb + \")\");\n    }\n    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: n - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: n - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] != 1 || kb[1] != 1) {\n      s.push(s.pop() + \"scale(\" + kb + \")\");\n    }\n    n = q.length;\n    return function(t) {\n      var i = -1, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) alpha = x; else alpha = 0;\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = 0;\n      root.y = 0;\n      root.dx = size[0];\n      root.dy = size[1];\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n        if (x1 != null) {\n          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.join(\"L\");\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return d3_svg_lineLinear(points) + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, active;\n      if ((lock = this[ns]) && (active = lock[lock.active])) {\n        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id];\n    if (!transition) {\n      var time = inherit.time;\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n      d3.timer(function(elapsed) {\n        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n        timer.t = delay + time;\n        if (delay <= elapsed) return start(elapsed - delay);\n        timer.c = start;\n        function start(elapsed) {\n          if (lock.active > id) return stop();\n          var active = lock[lock.active];\n          if (active) {\n            --lock.count;\n            delete lock[lock.active];\n            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n          }\n          lock.active = id;\n          transition.event && transition.event.start.call(node, node.__data__, i);\n          transition.tween.forEach(function(key, value) {\n            if (value = value.call(node, node.__data__, i)) {\n              tweened.push(value);\n            }\n          });\n          ease = transition.ease;\n          duration = transition.duration;\n          d3.timer(function() {\n            timer.c = tick(elapsed || 1) ? d3_true : tick;\n            return 1;\n          }, 0, time);\n        }\n        function tick(elapsed) {\n          if (lock.active !== id) return 1;\n          var t = elapsed / duration, e = ease(t), n = tweened.length;\n          while (n > 0) {\n            tweened[--n].call(node, e);\n          }\n          if (t >= 1) {\n            transition.event && transition.event.end.call(node, node.__data__, i);\n            return stop();\n          }\n        }\n        function stop() {\n          if (--lock.count) delete lock[id]; else delete node[ns];\n          return 1;\n        }\n      }, 0, time);\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = arguments;\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n  this.d3 = d3;\n}();","// vim:ts=4:sts=4:sw=4:\n/*!\n *\n * Copyright 2009-2012 Kris Kowal under the terms of the MIT\n * license found at http://github.com/kriskowal/q/raw/master/LICENSE\n *\n * With parts by Tyler Close\n * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found\n * at http://www.opensource.org/licenses/mit-license.html\n * Forked at ref_send.js version: 2009-05-11\n *\n * With parts by Mark Miller\n * Copyright (C) 2011 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n(function (definition) {\n    \"use strict\";\n\n    // This file will function properly as a <script> tag, or a module\n    // using CommonJS and NodeJS or RequireJS module formats.  In\n    // Common/Node/RequireJS, the module exports the Q API and when\n    // executed as a simple <script>, it creates a Q global instead.\n\n    // Montage Require\n    if (typeof bootstrap === \"function\") {\n        bootstrap(\"promise\", definition);\n\n    // CommonJS\n    } else if (typeof exports === \"object\" && typeof module === \"object\") {\n        module.exports = definition();\n\n    // RequireJS\n    } else if (typeof define === \"function\" && define.amd) {\n        define(definition);\n\n    // SES (Secure EcmaScript)\n    } else if (typeof ses !== \"undefined\") {\n        if (!ses.ok()) {\n            return;\n        } else {\n            ses.makeQ = definition;\n        }\n\n    // <script>\n    } else if (typeof window !== \"undefined\" || typeof self !== \"undefined\") {\n        // Prefer window over self for add-on scripts. Use self for\n        // non-windowed contexts.\n        var global = typeof window !== \"undefined\" ? window : self;\n\n        // Get the `window` object, save the previous Q global\n        // and initialize Q as a global.\n        var previousQ = global.Q;\n        global.Q = definition();\n\n        // Add a noConflict function so Q can be removed from the\n        // global namespace.\n        global.Q.noConflict = function () {\n            global.Q = previousQ;\n            return this;\n        };\n\n    } else {\n        throw new Error(\"This environment was not anticipated by Q. Please file a bug.\");\n    }\n\n})(function () {\n\"use strict\";\n\nvar hasStacks = false;\ntry {\n    throw new Error();\n} catch (e) {\n    hasStacks = !!e.stack;\n}\n\n// All code after this point will be filtered from stack traces reported\n// by Q.\nvar qStartingLine = captureLine();\nvar qFileName;\n\n// shims\n\n// used for fallback in \"allResolved\"\nvar noop = function () {};\n\n// Use the fastest possible means to execute a task in a future turn\n// of the event loop.\nvar nextTick =(function () {\n    // linked list of tasks (single, with head node)\n    var head = {task: void 0, next: null};\n    var tail = head;\n    var flushing = false;\n    var requestTick = void 0;\n    var isNodeJS = false;\n    // queue for late tasks, used by unhandled rejection tracking\n    var laterQueue = [];\n\n    function flush() {\n        /* jshint loopfunc: true */\n        var task, domain;\n\n        while (head.next) {\n            head = head.next;\n            task = head.task;\n            head.task = void 0;\n            domain = head.domain;\n\n            if (domain) {\n                head.domain = void 0;\n                domain.enter();\n            }\n            runSingle(task, domain);\n\n        }\n        while (laterQueue.length) {\n            task = laterQueue.pop();\n            runSingle(task);\n        }\n        flushing = false;\n    }\n    // runs a single function in the async queue\n    function runSingle(task, domain) {\n        try {\n            task();\n\n        } catch (e) {\n            if (isNodeJS) {\n                // In node, uncaught exceptions are considered fatal errors.\n                // Re-throw them synchronously to interrupt flushing!\n\n                // Ensure continuation if the uncaught exception is suppressed\n                // listening \"uncaughtException\" events (as domains does).\n                // Continue in next event to avoid tick recursion.\n                if (domain) {\n                    domain.exit();\n                }\n                setTimeout(flush, 0);\n                if (domain) {\n                    domain.enter();\n                }\n\n                throw e;\n\n            } else {\n                // In browsers, uncaught exceptions are not fatal.\n                // Re-throw them asynchronously to avoid slow-downs.\n                setTimeout(function () {\n                    throw e;\n                }, 0);\n            }\n        }\n\n        if (domain) {\n            domain.exit();\n        }\n    }\n\n    nextTick = function (task) {\n        tail = tail.next = {\n            task: task,\n            domain: isNodeJS && process.domain,\n            next: null\n        };\n\n        if (!flushing) {\n            flushing = true;\n            requestTick();\n        }\n    };\n\n    if (typeof process === \"object\" &&\n        process.toString() === \"[object process]\" && process.nextTick) {\n        // Ensure Q is in a real Node environment, with a `process.nextTick`.\n        // To see through fake Node environments:\n        // * Mocha test runner - exposes a `process` global without a `nextTick`\n        // * Browserify - exposes a `process.nexTick` function that uses\n        //   `setTimeout`. In this case `setImmediate` is preferred because\n        //    it is faster. Browserify's `process.toString()` yields\n        //   \"[object Object]\", while in a real Node environment\n        //   `process.nextTick()` yields \"[object process]\".\n        isNodeJS = true;\n\n        requestTick = function () {\n            process.nextTick(flush);\n        };\n\n    } else if (typeof setImmediate === \"function\") {\n        // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate\n        if (typeof window !== \"undefined\") {\n            requestTick = setImmediate.bind(window, flush);\n        } else {\n            requestTick = function () {\n                setImmediate(flush);\n            };\n        }\n\n    } else if (typeof MessageChannel !== \"undefined\") {\n        // modern browsers\n        // http://www.nonblocking.io/2011/06/windownexttick.html\n        var channel = new MessageChannel();\n        // At least Safari Version 6.0.5 (8536.30.1) intermittently cannot create\n        // working message ports the first time a page loads.\n        channel.port1.onmessage = function () {\n            requestTick = requestPortTick;\n            channel.port1.onmessage = flush;\n            flush();\n        };\n        var requestPortTick = function () {\n            // Opera requires us to provide a message payload, regardless of\n            // whether we use it.\n            channel.port2.postMessage(0);\n        };\n        requestTick = function () {\n            setTimeout(flush, 0);\n            requestPortTick();\n        };\n\n    } else {\n        // old browsers\n        requestTick = function () {\n            setTimeout(flush, 0);\n        };\n    }\n    // runs a task after all other tasks have been run\n    // this is useful for unhandled rejection tracking that needs to happen\n    // after all `then`d tasks have been run.\n    nextTick.runAfter = function (task) {\n        laterQueue.push(task);\n        if (!flushing) {\n            flushing = true;\n            requestTick();\n        }\n    };\n    return nextTick;\n})();\n\n// Attempt to make generics safe in the face of downstream\n// modifications.\n// There is no situation where this is necessary.\n// If you need a security guarantee, these primordials need to be\n// deeply frozen anyway, and if you don’t need a security guarantee,\n// this is just plain paranoid.\n// However, this **might** have the nice side-effect of reducing the size of\n// the minified code by reducing x.call() to merely x()\n// See Mark Miller’s explanation of what this does.\n// http://wiki.ecmascript.org/doku.php?id=conventions:safe_meta_programming\nvar call = Function.call;\nfunction uncurryThis(f) {\n    return function () {\n        return call.apply(f, arguments);\n    };\n}\n// This is equivalent, but slower:\n// uncurryThis = Function_bind.bind(Function_bind.call);\n// http://jsperf.com/uncurrythis\n\nvar array_slice = uncurryThis(Array.prototype.slice);\n\nvar array_reduce = uncurryThis(\n    Array.prototype.reduce || function (callback, basis) {\n        var index = 0,\n            length = this.length;\n        // concerning the initial value, if one is not provided\n        if (arguments.length === 1) {\n            // seek to the first value in the array, accounting\n            // for the possibility that is is a sparse array\n            do {\n                if (index in this) {\n                    basis = this[index++];\n                    break;\n                }\n                if (++index >= length) {\n                    throw new TypeError();\n                }\n            } while (1);\n        }\n        // reduce\n        for (; index < length; index++) {\n            // account for the possibility that the array is sparse\n            if (index in this) {\n                basis = callback(basis, this[index], index);\n            }\n        }\n        return basis;\n    }\n);\n\nvar array_indexOf = uncurryThis(\n    Array.prototype.indexOf || function (value) {\n        // not a very good shim, but good enough for our one use of it\n        for (var i = 0; i < this.length; i++) {\n            if (this[i] === value) {\n                return i;\n            }\n        }\n        return -1;\n    }\n);\n\nvar array_map = uncurryThis(\n    Array.prototype.map || function (callback, thisp) {\n        var self = this;\n        var collect = [];\n        array_reduce(self, function (undefined, value, index) {\n            collect.push(callback.call(thisp, value, index, self));\n        }, void 0);\n        return collect;\n    }\n);\n\nvar object_create = Object.create || function (prototype) {\n    function Type() { }\n    Type.prototype = prototype;\n    return new Type();\n};\n\nvar object_hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\n\nvar object_keys = Object.keys || function (object) {\n    var keys = [];\n    for (var key in object) {\n        if (object_hasOwnProperty(object, key)) {\n            keys.push(key);\n        }\n    }\n    return keys;\n};\n\nvar object_toString = uncurryThis(Object.prototype.toString);\n\nfunction isObject(value) {\n    return value === Object(value);\n}\n\n// generator related shims\n\n// FIXME: Remove this function once ES6 generators are in SpiderMonkey.\nfunction isStopIteration(exception) {\n    return (\n        object_toString(exception) === \"[object StopIteration]\" ||\n        exception instanceof QReturnValue\n    );\n}\n\n// FIXME: Remove this helper and Q.return once ES6 generators are in\n// SpiderMonkey.\nvar QReturnValue;\nif (typeof ReturnValue !== \"undefined\") {\n    QReturnValue = ReturnValue;\n} else {\n    QReturnValue = function (value) {\n        this.value = value;\n    };\n}\n\n// long stack traces\n\nvar STACK_JUMP_SEPARATOR = \"From previous event:\";\n\nfunction makeStackTraceLong(error, promise) {\n    // If possible, transform the error stack trace by removing Node and Q\n    // cruft, then concatenating with the stack trace of `promise`. See #57.\n    if (hasStacks &&\n        promise.stack &&\n        typeof error === \"object\" &&\n        error !== null &&\n        error.stack &&\n        error.stack.indexOf(STACK_JUMP_SEPARATOR) === -1\n    ) {\n        var stacks = [];\n        for (var p = promise; !!p; p = p.source) {\n            if (p.stack) {\n                stacks.unshift(p.stack);\n            }\n        }\n        stacks.unshift(error.stack);\n\n        var concatedStacks = stacks.join(\"\\n\" + STACK_JUMP_SEPARATOR + \"\\n\");\n        error.stack = filterStackString(concatedStacks);\n    }\n}\n\nfunction filterStackString(stackString) {\n    var lines = stackString.split(\"\\n\");\n    var desiredLines = [];\n    for (var i = 0; i < lines.length; ++i) {\n        var line = lines[i];\n\n        if (!isInternalFrame(line) && !isNodeFrame(line) && line) {\n            desiredLines.push(line);\n        }\n    }\n    return desiredLines.join(\"\\n\");\n}\n\nfunction isNodeFrame(stackLine) {\n    return stackLine.indexOf(\"(module.js:\") !== -1 ||\n           stackLine.indexOf(\"(node.js:\") !== -1;\n}\n\nfunction getFileNameAndLineNumber(stackLine) {\n    // Named functions: \"at functionName (filename:lineNumber:columnNumber)\"\n    // In IE10 function name can have spaces (\"Anonymous function\") O_o\n    var attempt1 = /at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(stackLine);\n    if (attempt1) {\n        return [attempt1[1], Number(attempt1[2])];\n    }\n\n    // Anonymous functions: \"at filename:lineNumber:columnNumber\"\n    var attempt2 = /at ([^ ]+):(\\d+):(?:\\d+)$/.exec(stackLine);\n    if (attempt2) {\n        return [attempt2[1], Number(attempt2[2])];\n    }\n\n    // Firefox style: \"function@filename:lineNumber or @filename:lineNumber\"\n    var attempt3 = /.*@(.+):(\\d+)$/.exec(stackLine);\n    if (attempt3) {\n        return [attempt3[1], Number(attempt3[2])];\n    }\n}\n\nfunction isInternalFrame(stackLine) {\n    var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);\n\n    if (!fileNameAndLineNumber) {\n        return false;\n    }\n\n    var fileName = fileNameAndLineNumber[0];\n    var lineNumber = fileNameAndLineNumber[1];\n\n    return fileName === qFileName &&\n        lineNumber >= qStartingLine &&\n        lineNumber <= qEndingLine;\n}\n\n// discover own file name and line number range for filtering stack\n// traces\nfunction captureLine() {\n    if (!hasStacks) {\n        return;\n    }\n\n    try {\n        throw new Error();\n    } catch (e) {\n        var lines = e.stack.split(\"\\n\");\n        var firstLine = lines[0].indexOf(\"@\") > 0 ? lines[1] : lines[2];\n        var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);\n        if (!fileNameAndLineNumber) {\n            return;\n        }\n\n        qFileName = fileNameAndLineNumber[0];\n        return fileNameAndLineNumber[1];\n    }\n}\n\nfunction deprecate(callback, name, alternative) {\n    return function () {\n        if (typeof console !== \"undefined\" &&\n            typeof console.warn === \"function\") {\n            console.warn(name + \" is deprecated, use \" + alternative +\n                         \" instead.\", new Error(\"\").stack);\n        }\n        return callback.apply(callback, arguments);\n    };\n}\n\n// end of shims\n// beginning of real work\n\n/**\n * Constructs a promise for an immediate reference, passes promises through, or\n * coerces promises from different systems.\n * @param value immediate reference or promise\n */\nfunction Q(value) {\n    // If the object is already a Promise, return it directly.  This enables\n    // the resolve function to both be used to created references from objects,\n    // but to tolerably coerce non-promises to promises.\n    if (value instanceof Promise) {\n        return value;\n    }\n\n    // assimilate thenables\n    if (isPromiseAlike(value)) {\n        return coerce(value);\n    } else {\n        return fulfill(value);\n    }\n}\nQ.resolve = Q;\n\n/**\n * Performs a task in a future turn of the event loop.\n * @param {Function} task\n */\nQ.nextTick = nextTick;\n\n/**\n * Controls whether or not long stack traces will be on\n */\nQ.longStackSupport = false;\n\n// enable long stacks if Q_DEBUG is set\nif (typeof process === \"object\" && process && process.env && process.env.Q_DEBUG) {\n    Q.longStackSupport = true;\n}\n\n/**\n * Constructs a {promise, resolve, reject} object.\n *\n * `resolve` is a callback to invoke with a more resolved value for the\n * promise. To fulfill the promise, invoke `resolve` with any value that is\n * not a thenable. To reject the promise, invoke `resolve` with a rejected\n * thenable, or invoke `reject` with the reason directly. To resolve the\n * promise to another thenable, thus putting it in the same state, invoke\n * `resolve` with that other thenable.\n */\nQ.defer = defer;\nfunction defer() {\n    // if \"messages\" is an \"Array\", that indicates that the promise has not yet\n    // been resolved.  If it is \"undefined\", it has been resolved.  Each\n    // element of the messages array is itself an array of complete arguments to\n    // forward to the resolved promise.  We coerce the resolution value to a\n    // promise using the `resolve` function because it handles both fully\n    // non-thenable values and other thenables gracefully.\n    var messages = [], progressListeners = [], resolvedPromise;\n\n    var deferred = object_create(defer.prototype);\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, operands) {\n        var args = array_slice(arguments);\n        if (messages) {\n            messages.push(args);\n            if (op === \"when\" && operands[1]) { // progress operand\n                progressListeners.push(operands[1]);\n            }\n        } else {\n            Q.nextTick(function () {\n                resolvedPromise.promiseDispatch.apply(resolvedPromise, args);\n            });\n        }\n    };\n\n    // XXX deprecated\n    promise.valueOf = function () {\n        if (messages) {\n            return promise;\n        }\n        var nearerValue = nearer(resolvedPromise);\n        if (isPromise(nearerValue)) {\n            resolvedPromise = nearerValue; // shorten chain\n        }\n        return nearerValue;\n    };\n\n    promise.inspect = function () {\n        if (!resolvedPromise) {\n            return { state: \"pending\" };\n        }\n        return resolvedPromise.inspect();\n    };\n\n    if (Q.longStackSupport && hasStacks) {\n        try {\n            throw new Error();\n        } catch (e) {\n            // NOTE: don't try to use `Error.captureStackTrace` or transfer the\n            // accessor around; that causes memory leaks as per GH-111. Just\n            // reify the stack trace as a string ASAP.\n            //\n            // At the same time, cut off the first line; it's always just\n            // \"[object Promise]\\n\", as per the `toString`.\n            promise.stack = e.stack.substring(e.stack.indexOf(\"\\n\") + 1);\n        }\n    }\n\n    // NOTE: we do the checks for `resolvedPromise` in each method, instead of\n    // consolidating them into `become`, since otherwise we'd create new\n    // promises with the lines `become(whatever(value))`. See e.g. GH-252.\n\n    function become(newPromise) {\n        resolvedPromise = newPromise;\n        promise.source = newPromise;\n\n        array_reduce(messages, function (undefined, message) {\n            Q.nextTick(function () {\n                newPromise.promiseDispatch.apply(newPromise, message);\n            });\n        }, void 0);\n\n        messages = void 0;\n        progressListeners = void 0;\n    }\n\n    deferred.promise = promise;\n    deferred.resolve = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(Q(value));\n    };\n\n    deferred.fulfill = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(fulfill(value));\n    };\n    deferred.reject = function (reason) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(reject(reason));\n    };\n    deferred.notify = function (progress) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        array_reduce(progressListeners, function (undefined, progressListener) {\n            Q.nextTick(function () {\n                progressListener(progress);\n            });\n        }, void 0);\n    };\n\n    return deferred;\n}\n\n/**\n * Creates a Node-style callback that will resolve or reject the deferred\n * promise.\n * @returns a nodeback\n */\ndefer.prototype.makeNodeResolver = function () {\n    var self = this;\n    return function (error, value) {\n        if (error) {\n            self.reject(error);\n        } else if (arguments.length > 2) {\n            self.resolve(array_slice(arguments, 1));\n        } else {\n            self.resolve(value);\n        }\n    };\n};\n\n/**\n * @param resolver {Function} a function that returns nothing and accepts\n * the resolve, reject, and notify functions for a deferred.\n * @returns a promise that may be resolved with the given resolve and reject\n * functions, or rejected by a thrown exception in resolver\n */\nQ.Promise = promise; // ES6\nQ.promise = promise;\nfunction promise(resolver) {\n    if (typeof resolver !== \"function\") {\n        throw new TypeError(\"resolver must be a function.\");\n    }\n    var deferred = defer();\n    try {\n        resolver(deferred.resolve, deferred.reject, deferred.notify);\n    } catch (reason) {\n        deferred.reject(reason);\n    }\n    return deferred.promise;\n}\n\npromise.race = race; // ES6\npromise.all = all; // ES6\npromise.reject = reject; // ES6\npromise.resolve = Q; // ES6\n\n// XXX experimental.  This method is a way to denote that a local value is\n// serializable and should be immediately dispatched to a remote upon request,\n// instead of passing a reference.\nQ.passByCopy = function (object) {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return object;\n};\n\nPromise.prototype.passByCopy = function () {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return this;\n};\n\n/**\n * If two promises eventually fulfill to the same value, promises that value,\n * but otherwise rejects.\n * @param x {Any*}\n * @param y {Any*}\n * @returns {Any*} a promise for x and y if they are the same, but a rejection\n * otherwise.\n *\n */\nQ.join = function (x, y) {\n    return Q(x).join(y);\n};\n\nPromise.prototype.join = function (that) {\n    return Q([this, that]).spread(function (x, y) {\n        if (x === y) {\n            // TODO: \"===\" should be Object.is or equiv\n            return x;\n        } else {\n            throw new Error(\"Can't join: not the same: \" + x + \" \" + y);\n        }\n    });\n};\n\n/**\n * Returns a promise for the first of an array of promises to become settled.\n * @param answers {Array[Any*]} promises to race\n * @returns {Any*} the first promise to be settled\n */\nQ.race = race;\nfunction race(answerPs) {\n    return promise(function (resolve, reject) {\n        // Switch to this once we can assume at least ES5\n        // answerPs.forEach(function (answerP) {\n        //     Q(answerP).then(resolve, reject);\n        // });\n        // Use this in the meantime\n        for (var i = 0, len = answerPs.length; i < len; i++) {\n            Q(answerPs[i]).then(resolve, reject);\n        }\n    });\n}\n\nPromise.prototype.race = function () {\n    return this.then(Q.race);\n};\n\n/**\n * Constructs a Promise with a promise descriptor object and optional fallback\n * function.  The descriptor contains methods like when(rejected), get(name),\n * set(name, value), post(name, args), and delete(name), which all\n * return either a value, a promise for a value, or a rejection.  The fallback\n * accepts the operation name, a resolver, and any further arguments that would\n * have been forwarded to the appropriate method above had a method been\n * provided with the proper name.  The API makes no guarantees about the nature\n * of the returned object, apart from that it is usable whereever promises are\n * bought and sold.\n */\nQ.makePromise = Promise;\nfunction Promise(descriptor, fallback, inspect) {\n    if (fallback === void 0) {\n        fallback = function (op) {\n            return reject(new Error(\n                \"Promise does not support operation: \" + op\n            ));\n        };\n    }\n    if (inspect === void 0) {\n        inspect = function () {\n            return {state: \"unknown\"};\n        };\n    }\n\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, args) {\n        var result;\n        try {\n            if (descriptor[op]) {\n                result = descriptor[op].apply(promise, args);\n            } else {\n                result = fallback.call(promise, op, args);\n            }\n        } catch (exception) {\n            result = reject(exception);\n        }\n        if (resolve) {\n            resolve(result);\n        }\n    };\n\n    promise.inspect = inspect;\n\n    // XXX deprecated `valueOf` and `exception` support\n    if (inspect) {\n        var inspected = inspect();\n        if (inspected.state === \"rejected\") {\n            promise.exception = inspected.reason;\n        }\n\n        promise.valueOf = function () {\n            var inspected = inspect();\n            if (inspected.state === \"pending\" ||\n                inspected.state === \"rejected\") {\n                return promise;\n            }\n            return inspected.value;\n        };\n    }\n\n    return promise;\n}\n\nPromise.prototype.toString = function () {\n    return \"[object Promise]\";\n};\n\nPromise.prototype.then = function (fulfilled, rejected, progressed) {\n    var self = this;\n    var deferred = defer();\n    var done = false;   // ensure the untrusted promise makes at most a\n                        // single call to one of the callbacks\n\n    function _fulfilled(value) {\n        try {\n            return typeof fulfilled === \"function\" ? fulfilled(value) : value;\n        } catch (exception) {\n            return reject(exception);\n        }\n    }\n\n    function _rejected(exception) {\n        if (typeof rejected === \"function\") {\n            makeStackTraceLong(exception, self);\n            try {\n                return rejected(exception);\n            } catch (newException) {\n                return reject(newException);\n            }\n        }\n        return reject(exception);\n    }\n\n    function _progressed(value) {\n        return typeof progressed === \"function\" ? progressed(value) : value;\n    }\n\n    Q.nextTick(function () {\n        self.promiseDispatch(function (value) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_fulfilled(value));\n        }, \"when\", [function (exception) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_rejected(exception));\n        }]);\n    });\n\n    // Progress propagator need to be attached in the current tick.\n    self.promiseDispatch(void 0, \"when\", [void 0, function (value) {\n        var newValue;\n        var threw = false;\n        try {\n            newValue = _progressed(value);\n        } catch (e) {\n            threw = true;\n            if (Q.onerror) {\n                Q.onerror(e);\n            } else {\n                throw e;\n            }\n        }\n\n        if (!threw) {\n            deferred.notify(newValue);\n        }\n    }]);\n\n    return deferred.promise;\n};\n\nQ.tap = function (promise, callback) {\n    return Q(promise).tap(callback);\n};\n\n/**\n * Works almost like \"finally\", but not called for rejections.\n * Original resolution value is passed through callback unaffected.\n * Callback may return a promise that will be awaited for.\n * @param {Function} callback\n * @returns {Q.Promise}\n * @example\n * doSomething()\n *   .then(...)\n *   .tap(console.log)\n *   .then(...);\n */\nPromise.prototype.tap = function (callback) {\n    callback = Q(callback);\n\n    return this.then(function (value) {\n        return callback.fcall(value).thenResolve(value);\n    });\n};\n\n/**\n * Registers an observer on a promise.\n *\n * Guarantees:\n *\n * 1. that fulfilled and rejected will be called only once.\n * 2. that either the fulfilled callback or the rejected callback will be\n *    called, but not both.\n * 3. that fulfilled and rejected will not be called in this turn.\n *\n * @param value      promise or immediate reference to observe\n * @param fulfilled  function to be called with the fulfilled value\n * @param rejected   function to be called with the rejection exception\n * @param progressed function to be called on any progress notifications\n * @return promise for the return value from the invoked callback\n */\nQ.when = when;\nfunction when(value, fulfilled, rejected, progressed) {\n    return Q(value).then(fulfilled, rejected, progressed);\n}\n\nPromise.prototype.thenResolve = function (value) {\n    return this.then(function () { return value; });\n};\n\nQ.thenResolve = function (promise, value) {\n    return Q(promise).thenResolve(value);\n};\n\nPromise.prototype.thenReject = function (reason) {\n    return this.then(function () { throw reason; });\n};\n\nQ.thenReject = function (promise, reason) {\n    return Q(promise).thenReject(reason);\n};\n\n/**\n * If an object is not a promise, it is as \"near\" as possible.\n * If a promise is rejected, it is as \"near\" as possible too.\n * If it’s a fulfilled promise, the fulfillment value is nearer.\n * If it’s a deferred promise and the deferred has been resolved, the\n * resolution is \"nearer\".\n * @param object\n * @returns most resolved (nearest) form of the object\n */\n\n// XXX should we re-do this?\nQ.nearer = nearer;\nfunction nearer(value) {\n    if (isPromise(value)) {\n        var inspected = value.inspect();\n        if (inspected.state === \"fulfilled\") {\n            return inspected.value;\n        }\n    }\n    return value;\n}\n\n/**\n * @returns whether the given object is a promise.\n * Otherwise it is a fulfilled value.\n */\nQ.isPromise = isPromise;\nfunction isPromise(object) {\n    return object instanceof Promise;\n}\n\nQ.isPromiseAlike = isPromiseAlike;\nfunction isPromiseAlike(object) {\n    return isObject(object) && typeof object.then === \"function\";\n}\n\n/**\n * @returns whether the given object is a pending promise, meaning not\n * fulfilled or rejected.\n */\nQ.isPending = isPending;\nfunction isPending(object) {\n    return isPromise(object) && object.inspect().state === \"pending\";\n}\n\nPromise.prototype.isPending = function () {\n    return this.inspect().state === \"pending\";\n};\n\n/**\n * @returns whether the given object is a value or fulfilled\n * promise.\n */\nQ.isFulfilled = isFulfilled;\nfunction isFulfilled(object) {\n    return !isPromise(object) || object.inspect().state === \"fulfilled\";\n}\n\nPromise.prototype.isFulfilled = function () {\n    return this.inspect().state === \"fulfilled\";\n};\n\n/**\n * @returns whether the given object is a rejected promise.\n */\nQ.isRejected = isRejected;\nfunction isRejected(object) {\n    return isPromise(object) && object.inspect().state === \"rejected\";\n}\n\nPromise.prototype.isRejected = function () {\n    return this.inspect().state === \"rejected\";\n};\n\n//// BEGIN UNHANDLED REJECTION TRACKING\n\n// This promise library consumes exceptions thrown in handlers so they can be\n// handled by a subsequent promise.  The exceptions get added to this array when\n// they are created, and removed when they are handled.  Note that in ES6 or\n// shimmed environments, this would naturally be a `Set`.\nvar unhandledReasons = [];\nvar unhandledRejections = [];\nvar reportedUnhandledRejections = [];\nvar trackUnhandledRejections = true;\n\nfunction resetUnhandledRejections() {\n    unhandledReasons.length = 0;\n    unhandledRejections.length = 0;\n\n    if (!trackUnhandledRejections) {\n        trackUnhandledRejections = true;\n    }\n}\n\nfunction trackRejection(promise, reason) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n    if (typeof process === \"object\" && typeof process.emit === \"function\") {\n        Q.nextTick.runAfter(function () {\n            if (array_indexOf(unhandledRejections, promise) !== -1) {\n                process.emit(\"unhandledRejection\", reason, promise);\n                reportedUnhandledRejections.push(promise);\n            }\n        });\n    }\n\n    unhandledRejections.push(promise);\n    if (reason && typeof reason.stack !== \"undefined\") {\n        unhandledReasons.push(reason.stack);\n    } else {\n        unhandledReasons.push(\"(no stack) \" + reason);\n    }\n}\n\nfunction untrackRejection(promise) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n\n    var at = array_indexOf(unhandledRejections, promise);\n    if (at !== -1) {\n        if (typeof process === \"object\" && typeof process.emit === \"function\") {\n            Q.nextTick.runAfter(function () {\n                var atReport = array_indexOf(reportedUnhandledRejections, promise);\n                if (atReport !== -1) {\n                    process.emit(\"rejectionHandled\", unhandledReasons[at], promise);\n                    reportedUnhandledRejections.splice(atReport, 1);\n                }\n            });\n        }\n        unhandledRejections.splice(at, 1);\n        unhandledReasons.splice(at, 1);\n    }\n}\n\nQ.resetUnhandledRejections = resetUnhandledRejections;\n\nQ.getUnhandledReasons = function () {\n    // Make a copy so that consumers can't interfere with our internal state.\n    return unhandledReasons.slice();\n};\n\nQ.stopUnhandledRejectionTracking = function () {\n    resetUnhandledRejections();\n    trackUnhandledRejections = false;\n};\n\nresetUnhandledRejections();\n\n//// END UNHANDLED REJECTION TRACKING\n\n/**\n * Constructs a rejected promise.\n * @param reason value describing the failure\n */\nQ.reject = reject;\nfunction reject(reason) {\n    var rejection = Promise({\n        \"when\": function (rejected) {\n            // note that the error has been handled\n            if (rejected) {\n                untrackRejection(this);\n            }\n            return rejected ? rejected(reason) : this;\n        }\n    }, function fallback() {\n        return this;\n    }, function inspect() {\n        return { state: \"rejected\", reason: reason };\n    });\n\n    // Note that the reason has not been handled.\n    trackRejection(rejection, reason);\n\n    return rejection;\n}\n\n/**\n * Constructs a fulfilled promise for an immediate reference.\n * @param value immediate reference\n */\nQ.fulfill = fulfill;\nfunction fulfill(value) {\n    return Promise({\n        \"when\": function () {\n            return value;\n        },\n        \"get\": function (name) {\n            return value[name];\n        },\n        \"set\": function (name, rhs) {\n            value[name] = rhs;\n        },\n        \"delete\": function (name) {\n            delete value[name];\n        },\n        \"post\": function (name, args) {\n            // Mark Miller proposes that post with no name should apply a\n            // promised function.\n            if (name === null || name === void 0) {\n                return value.apply(void 0, args);\n            } else {\n                return value[name].apply(value, args);\n            }\n        },\n        \"apply\": function (thisp, args) {\n            return value.apply(thisp, args);\n        },\n        \"keys\": function () {\n            return object_keys(value);\n        }\n    }, void 0, function inspect() {\n        return { state: \"fulfilled\", value: value };\n    });\n}\n\n/**\n * Converts thenables to Q promises.\n * @param promise thenable promise\n * @returns a Q promise\n */\nfunction coerce(promise) {\n    var deferred = defer();\n    Q.nextTick(function () {\n        try {\n            promise.then(deferred.resolve, deferred.reject, deferred.notify);\n        } catch (exception) {\n            deferred.reject(exception);\n        }\n    });\n    return deferred.promise;\n}\n\n/**\n * Annotates an object such that it will never be\n * transferred away from this process over any promise\n * communication channel.\n * @param object\n * @returns promise a wrapping of that object that\n * additionally responds to the \"isDef\" message\n * without a rejection.\n */\nQ.master = master;\nfunction master(object) {\n    return Promise({\n        \"isDef\": function () {}\n    }, function fallback(op, args) {\n        return dispatch(object, op, args);\n    }, function () {\n        return Q(object).inspect();\n    });\n}\n\n/**\n * Spreads the values of a promised array of arguments into the\n * fulfillment callback.\n * @param fulfilled callback that receives variadic arguments from the\n * promised array\n * @param rejected callback that receives the exception if the promise\n * is rejected.\n * @returns a promise for the return value or thrown exception of\n * either callback.\n */\nQ.spread = spread;\nfunction spread(value, fulfilled, rejected) {\n    return Q(value).spread(fulfilled, rejected);\n}\n\nPromise.prototype.spread = function (fulfilled, rejected) {\n    return this.all().then(function (array) {\n        return fulfilled.apply(void 0, array);\n    }, rejected);\n};\n\n/**\n * The async function is a decorator for generator functions, turning\n * them into asynchronous generators.  Although generators are only part\n * of the newest ECMAScript 6 drafts, this code does not cause syntax\n * errors in older engines.  This code should continue to work and will\n * in fact improve over time as the language improves.\n *\n * ES6 generators are currently part of V8 version 3.19 with the\n * --harmony-generators runtime flag enabled.  SpiderMonkey has had them\n * for longer, but under an older Python-inspired form.  This function\n * works on both kinds of generators.\n *\n * Decorates a generator function such that:\n *  - it may yield promises\n *  - execution will continue when that promise is fulfilled\n *  - the value of the yield expression will be the fulfilled value\n *  - it returns a promise for the return value (when the generator\n *    stops iterating)\n *  - the decorated function returns a promise for the return value\n *    of the generator or the first rejected promise among those\n *    yielded.\n *  - if an error is thrown in the generator, it propagates through\n *    every following yield until it is caught, or until it escapes\n *    the generator function altogether, and is translated into a\n *    rejection for the promise returned by the decorated generator.\n */\nQ.async = async;\nfunction async(makeGenerator) {\n    return function () {\n        // when verb is \"send\", arg is a value\n        // when verb is \"throw\", arg is an exception\n        function continuer(verb, arg) {\n            var result;\n\n            // Until V8 3.19 / Chromium 29 is released, SpiderMonkey is the only\n            // engine that has a deployed base of browsers that support generators.\n            // However, SM's generators use the Python-inspired semantics of\n            // outdated ES6 drafts.  We would like to support ES6, but we'd also\n            // like to make it possible to use generators in deployed browsers, so\n            // we also support Python-style generators.  At some point we can remove\n            // this block.\n\n            if (typeof StopIteration === \"undefined\") {\n                // ES6 Generators\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    return reject(exception);\n                }\n                if (result.done) {\n                    return Q(result.value);\n                } else {\n                    return when(result.value, callback, errback);\n                }\n            } else {\n                // SpiderMonkey Generators\n                // FIXME: Remove this case when SM does ES6 generators.\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    if (isStopIteration(exception)) {\n                        return Q(exception.value);\n                    } else {\n                        return reject(exception);\n                    }\n                }\n                return when(result, callback, errback);\n            }\n        }\n        var generator = makeGenerator.apply(this, arguments);\n        var callback = continuer.bind(continuer, \"next\");\n        var errback = continuer.bind(continuer, \"throw\");\n        return callback();\n    };\n}\n\n/**\n * The spawn function is a small wrapper around async that immediately\n * calls the generator and also ends the promise chain, so that any\n * unhandled errors are thrown instead of forwarded to the error\n * handler. This is useful because it's extremely common to run\n * generators at the top-level to work with libraries.\n */\nQ.spawn = spawn;\nfunction spawn(makeGenerator) {\n    Q.done(Q.async(makeGenerator)());\n}\n\n// FIXME: Remove this interface once ES6 generators are in SpiderMonkey.\n/**\n * Throws a ReturnValue exception to stop an asynchronous generator.\n *\n * This interface is a stop-gap measure to support generator return\n * values in older Firefox/SpiderMonkey.  In browsers that support ES6\n * generators like Chromium 29, just use \"return\" in your generator\n * functions.\n *\n * @param value the return value for the surrounding generator\n * @throws ReturnValue exception with the value.\n * @example\n * // ES6 style\n * Q.async(function* () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      return foo + bar;\n * })\n * // Older SpiderMonkey style\n * Q.async(function () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      Q.return(foo + bar);\n * })\n */\nQ[\"return\"] = _return;\nfunction _return(value) {\n    throw new QReturnValue(value);\n}\n\n/**\n * The promised function decorator ensures that any promise arguments\n * are settled and passed as values (`this` is also settled and passed\n * as a value).  It will also ensure that the result of a function is\n * always a promise.\n *\n * @example\n * var add = Q.promised(function (a, b) {\n *     return a + b;\n * });\n * add(Q(a), Q(B));\n *\n * @param {function} callback The function to decorate\n * @returns {function} a function that has been decorated.\n */\nQ.promised = promised;\nfunction promised(callback) {\n    return function () {\n        return spread([this, all(arguments)], function (self, args) {\n            return callback.apply(self, args);\n        });\n    };\n}\n\n/**\n * sends a message to a value in a future turn\n * @param object* the recipient\n * @param op the name of the message operation, e.g., \"when\",\n * @param args further arguments to be forwarded to the operation\n * @returns result {Promise} a promise for the result of the operation\n */\nQ.dispatch = dispatch;\nfunction dispatch(object, op, args) {\n    return Q(object).dispatch(op, args);\n}\n\nPromise.prototype.dispatch = function (op, args) {\n    var self = this;\n    var deferred = defer();\n    Q.nextTick(function () {\n        self.promiseDispatch(deferred.resolve, op, args);\n    });\n    return deferred.promise;\n};\n\n/**\n * Gets the value of a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to get\n * @return promise for the property value\n */\nQ.get = function (object, key) {\n    return Q(object).dispatch(\"get\", [key]);\n};\n\nPromise.prototype.get = function (key) {\n    return this.dispatch(\"get\", [key]);\n};\n\n/**\n * Sets the value of a property in a future turn.\n * @param object    promise or immediate reference for object object\n * @param name      name of property to set\n * @param value     new value of property\n * @return promise for the return value\n */\nQ.set = function (object, key, value) {\n    return Q(object).dispatch(\"set\", [key, value]);\n};\n\nPromise.prototype.set = function (key, value) {\n    return this.dispatch(\"set\", [key, value]);\n};\n\n/**\n * Deletes a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to delete\n * @return promise for the return value\n */\nQ.del = // XXX legacy\nQ[\"delete\"] = function (object, key) {\n    return Q(object).dispatch(\"delete\", [key]);\n};\n\nPromise.prototype.del = // XXX legacy\nPromise.prototype[\"delete\"] = function (key) {\n    return this.dispatch(\"delete\", [key]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param value     a value to post, typically an array of\n *                  invocation arguments for promises that\n *                  are ultimately backed with `resolve` values,\n *                  as opposed to those backed with URLs\n *                  wherein the posted value can be any\n *                  JSON serializable object.\n * @return promise for the return value\n */\n// bound locally because it is used by other methods\nQ.mapply = // XXX As proposed by \"Redsandro\"\nQ.post = function (object, name, args) {\n    return Q(object).dispatch(\"post\", [name, args]);\n};\n\nPromise.prototype.mapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.post = function (name, args) {\n    return this.dispatch(\"post\", [name, args]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param ...args   array of invocation arguments\n * @return promise for the return value\n */\nQ.send = // XXX Mark Miller's proposed parlance\nQ.mcall = // XXX As proposed by \"Redsandro\"\nQ.invoke = function (object, name /*...args*/) {\n    return Q(object).dispatch(\"post\", [name, array_slice(arguments, 2)]);\n};\n\nPromise.prototype.send = // XXX Mark Miller's proposed parlance\nPromise.prototype.mcall = // XXX As proposed by \"Redsandro\"\nPromise.prototype.invoke = function (name /*...args*/) {\n    return this.dispatch(\"post\", [name, array_slice(arguments, 1)]);\n};\n\n/**\n * Applies the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param args      array of application arguments\n */\nQ.fapply = function (object, args) {\n    return Q(object).dispatch(\"apply\", [void 0, args]);\n};\n\nPromise.prototype.fapply = function (args) {\n    return this.dispatch(\"apply\", [void 0, args]);\n};\n\n/**\n * Calls the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ[\"try\"] =\nQ.fcall = function (object /* ...args*/) {\n    return Q(object).dispatch(\"apply\", [void 0, array_slice(arguments, 1)]);\n};\n\nPromise.prototype.fcall = function (/*...args*/) {\n    return this.dispatch(\"apply\", [void 0, array_slice(arguments)]);\n};\n\n/**\n * Binds the promised function, transforming return values into a fulfilled\n * promise and thrown errors into a rejected one.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ.fbind = function (object /*...args*/) {\n    var promise = Q(object);\n    var args = array_slice(arguments, 1);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\nPromise.prototype.fbind = function (/*...args*/) {\n    var promise = this;\n    var args = array_slice(arguments);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\n\n/**\n * Requests the names of the owned properties of a promised\n * object in a future turn.\n * @param object    promise or immediate reference for target object\n * @return promise for the keys of the eventually settled object\n */\nQ.keys = function (object) {\n    return Q(object).dispatch(\"keys\", []);\n};\n\nPromise.prototype.keys = function () {\n    return this.dispatch(\"keys\", []);\n};\n\n/**\n * Turns an array of promises into a promise for an array.  If any of\n * the promises gets rejected, the whole array is rejected immediately.\n * @param {Array*} an array (or promise for an array) of values (or\n * promises for values)\n * @returns a promise for an array of the corresponding values\n */\n// By Mark Miller\n// http://wiki.ecmascript.org/doku.php?id=strawman:concurrency&rev=1308776521#allfulfilled\nQ.all = all;\nfunction all(promises) {\n    return when(promises, function (promises) {\n        var pendingCount = 0;\n        var deferred = defer();\n        array_reduce(promises, function (undefined, promise, index) {\n            var snapshot;\n            if (\n                isPromise(promise) &&\n                (snapshot = promise.inspect()).state === \"fulfilled\"\n            ) {\n                promises[index] = snapshot.value;\n            } else {\n                ++pendingCount;\n                when(\n                    promise,\n                    function (value) {\n                        promises[index] = value;\n                        if (--pendingCount === 0) {\n                            deferred.resolve(promises);\n                        }\n                    },\n                    deferred.reject,\n                    function (progress) {\n                        deferred.notify({ index: index, value: progress });\n                    }\n                );\n            }\n        }, void 0);\n        if (pendingCount === 0) {\n            deferred.resolve(promises);\n        }\n        return deferred.promise;\n    });\n}\n\nPromise.prototype.all = function () {\n    return all(this);\n};\n\n/**\n * Returns the first resolved promise of an array. Prior rejected promises are\n * ignored.  Rejects only if all promises are rejected.\n * @param {Array*} an array containing values or promises for values\n * @returns a promise fulfilled with the value of the first resolved promise,\n * or a rejected promise if all promises are rejected.\n */\nQ.any = any;\n\nfunction any(promises) {\n    if (promises.length === 0) {\n        return Q.resolve();\n    }\n\n    var deferred = Q.defer();\n    var pendingCount = 0;\n    array_reduce(promises, function (prev, current, index) {\n        var promise = promises[index];\n\n        pendingCount++;\n\n        when(promise, onFulfilled, onRejected, onProgress);\n        function onFulfilled(result) {\n            deferred.resolve(result);\n        }\n        function onRejected() {\n            pendingCount--;\n            if (pendingCount === 0) {\n                deferred.reject(new Error(\n                    \"Can't get fulfillment value from any promise, all \" +\n                    \"promises were rejected.\"\n                ));\n            }\n        }\n        function onProgress(progress) {\n            deferred.notify({\n                index: index,\n                value: progress\n            });\n        }\n    }, undefined);\n\n    return deferred.promise;\n}\n\nPromise.prototype.any = function () {\n    return any(this);\n};\n\n/**\n * Waits for all promises to be settled, either fulfilled or\n * rejected.  This is distinct from `all` since that would stop\n * waiting at the first rejection.  The promise returned by\n * `allResolved` will never be rejected.\n * @param promises a promise for an array (or an array) of promises\n * (or values)\n * @return a promise for an array of promises\n */\nQ.allResolved = deprecate(allResolved, \"allResolved\", \"allSettled\");\nfunction allResolved(promises) {\n    return when(promises, function (promises) {\n        promises = array_map(promises, Q);\n        return when(all(array_map(promises, function (promise) {\n            return when(promise, noop, noop);\n        })), function () {\n            return promises;\n        });\n    });\n}\n\nPromise.prototype.allResolved = function () {\n    return allResolved(this);\n};\n\n/**\n * @see Promise#allSettled\n */\nQ.allSettled = allSettled;\nfunction allSettled(promises) {\n    return Q(promises).allSettled();\n}\n\n/**\n * Turns an array of promises into a promise for an array of their states (as\n * returned by `inspect`) when they have all settled.\n * @param {Array[Any*]} values an array (or promise for an array) of values (or\n * promises for values)\n * @returns {Array[State]} an array of states for the respective values.\n */\nPromise.prototype.allSettled = function () {\n    return this.then(function (promises) {\n        return all(array_map(promises, function (promise) {\n            promise = Q(promise);\n            function regardless() {\n                return promise.inspect();\n            }\n            return promise.then(regardless, regardless);\n        }));\n    });\n};\n\n/**\n * Captures the failure of a promise, giving an oportunity to recover\n * with a callback.  If the given promise is fulfilled, the returned\n * promise is fulfilled.\n * @param {Any*} promise for something\n * @param {Function} callback to fulfill the returned promise if the\n * given promise is rejected\n * @returns a promise for the return value of the callback\n */\nQ.fail = // XXX legacy\nQ[\"catch\"] = function (object, rejected) {\n    return Q(object).then(void 0, rejected);\n};\n\nPromise.prototype.fail = // XXX legacy\nPromise.prototype[\"catch\"] = function (rejected) {\n    return this.then(void 0, rejected);\n};\n\n/**\n * Attaches a listener that can respond to progress notifications from a\n * promise's originating deferred. This listener receives the exact arguments\n * passed to ``deferred.notify``.\n * @param {Any*} promise for something\n * @param {Function} callback to receive any progress notifications\n * @returns the given promise, unchanged\n */\nQ.progress = progress;\nfunction progress(object, progressed) {\n    return Q(object).then(void 0, void 0, progressed);\n}\n\nPromise.prototype.progress = function (progressed) {\n    return this.then(void 0, void 0, progressed);\n};\n\n/**\n * Provides an opportunity to observe the settling of a promise,\n * regardless of whether the promise is fulfilled or rejected.  Forwards\n * the resolution to the returned promise when the callback is done.\n * The callback can return a promise to defer completion.\n * @param {Any*} promise\n * @param {Function} callback to observe the resolution of the given\n * promise, takes no arguments.\n * @returns a promise for the resolution of the given promise when\n * ``fin`` is done.\n */\nQ.fin = // XXX legacy\nQ[\"finally\"] = function (object, callback) {\n    return Q(object)[\"finally\"](callback);\n};\n\nPromise.prototype.fin = // XXX legacy\nPromise.prototype[\"finally\"] = function (callback) {\n    callback = Q(callback);\n    return this.then(function (value) {\n        return callback.fcall().then(function () {\n            return value;\n        });\n    }, function (reason) {\n        // TODO attempt to recycle the rejection with \"this\".\n        return callback.fcall().then(function () {\n            throw reason;\n        });\n    });\n};\n\n/**\n * Terminates a chain of promises, forcing rejections to be\n * thrown as exceptions.\n * @param {Any*} promise at the end of a chain of promises\n * @returns nothing\n */\nQ.done = function (object, fulfilled, rejected, progress) {\n    return Q(object).done(fulfilled, rejected, progress);\n};\n\nPromise.prototype.done = function (fulfilled, rejected, progress) {\n    var onUnhandledError = function (error) {\n        // forward to a future turn so that ``when``\n        // does not catch it and turn it into a rejection.\n        Q.nextTick(function () {\n            makeStackTraceLong(error, promise);\n            if (Q.onerror) {\n                Q.onerror(error);\n            } else {\n                throw error;\n            }\n        });\n    };\n\n    // Avoid unnecessary `nextTick`ing via an unnecessary `when`.\n    var promise = fulfilled || rejected || progress ?\n        this.then(fulfilled, rejected, progress) :\n        this;\n\n    if (typeof process === \"object\" && process && process.domain) {\n        onUnhandledError = process.domain.bind(onUnhandledError);\n    }\n\n    promise.then(void 0, onUnhandledError);\n};\n\n/**\n * Causes a promise to be rejected if it does not get fulfilled before\n * some milliseconds time out.\n * @param {Any*} promise\n * @param {Number} milliseconds timeout\n * @param {Any*} custom error message or Error object (optional)\n * @returns a promise for the resolution of the given promise if it is\n * fulfilled before the timeout, otherwise rejected.\n */\nQ.timeout = function (object, ms, error) {\n    return Q(object).timeout(ms, error);\n};\n\nPromise.prototype.timeout = function (ms, error) {\n    var deferred = defer();\n    var timeoutId = setTimeout(function () {\n        if (!error || \"string\" === typeof error) {\n            error = new Error(error || \"Timed out after \" + ms + \" ms\");\n            error.code = \"ETIMEDOUT\";\n        }\n        deferred.reject(error);\n    }, ms);\n\n    this.then(function (value) {\n        clearTimeout(timeoutId);\n        deferred.resolve(value);\n    }, function (exception) {\n        clearTimeout(timeoutId);\n        deferred.reject(exception);\n    }, deferred.notify);\n\n    return deferred.promise;\n};\n\n/**\n * Returns a promise for the given value (or promised value), some\n * milliseconds after it resolved. Passes rejections immediately.\n * @param {Any*} promise\n * @param {Number} milliseconds\n * @returns a promise for the resolution of the given promise after milliseconds\n * time has elapsed since the resolution of the given promise.\n * If the given promise rejects, that is passed immediately.\n */\nQ.delay = function (object, timeout) {\n    if (timeout === void 0) {\n        timeout = object;\n        object = void 0;\n    }\n    return Q(object).delay(timeout);\n};\n\nPromise.prototype.delay = function (timeout) {\n    return this.then(function (value) {\n        var deferred = defer();\n        setTimeout(function () {\n            deferred.resolve(value);\n        }, timeout);\n        return deferred.promise;\n    });\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided as an array, and returns a promise.\n *\n *      Q.nfapply(FS.readFile, [__filename])\n *      .then(function (content) {\n *      })\n *\n */\nQ.nfapply = function (callback, args) {\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfapply = function (args) {\n    var deferred = defer();\n    var nodeArgs = array_slice(args);\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided individually, and returns a promise.\n * @example\n * Q.nfcall(FS.readFile, __filename)\n * .then(function (content) {\n * })\n *\n */\nQ.nfcall = function (callback /*...args*/) {\n    var args = array_slice(arguments, 1);\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfcall = function (/*...args*/) {\n    var nodeArgs = array_slice(arguments);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Wraps a NodeJS continuation passing function and returns an equivalent\n * version that returns a promise.\n * @example\n * Q.nfbind(FS.readFile, __filename)(\"utf-8\")\n * .then(console.log)\n * .done()\n */\nQ.nfbind =\nQ.denodeify = function (callback /*...args*/) {\n    var baseArgs = array_slice(arguments, 1);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        Q(callback).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nfbind =\nPromise.prototype.denodeify = function (/*...args*/) {\n    var args = array_slice(arguments);\n    args.unshift(this);\n    return Q.denodeify.apply(void 0, args);\n};\n\nQ.nbind = function (callback, thisp /*...args*/) {\n    var baseArgs = array_slice(arguments, 2);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        function bound() {\n            return callback.apply(thisp, arguments);\n        }\n        Q(bound).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nbind = function (/*thisp, ...args*/) {\n    var args = array_slice(arguments, 0);\n    args.unshift(this);\n    return Q.nbind.apply(void 0, args);\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback with a given array of arguments, plus a provided callback.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param {Array} args arguments to pass to the method; the callback\n * will be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nmapply = // XXX As proposed by \"Redsandro\"\nQ.npost = function (object, name, args) {\n    return Q(object).npost(name, args);\n};\n\nPromise.prototype.nmapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.npost = function (name, args) {\n    var nodeArgs = array_slice(args || []);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback, forwarding the given variadic arguments, plus a provided\n * callback argument.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param ...args arguments to pass to the method; the callback will\n * be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nsend = // XXX Based on Mark Miller's proposed \"send\"\nQ.nmcall = // XXX Based on \"Redsandro's\" proposal\nQ.ninvoke = function (object, name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 2);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    Q(object).dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\nPromise.prototype.nsend = // XXX Based on Mark Miller's proposed \"send\"\nPromise.prototype.nmcall = // XXX Based on \"Redsandro's\" proposal\nPromise.prototype.ninvoke = function (name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 1);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * If a function would like to support both Node continuation-passing-style and\n * promise-returning-style, it can end its internal promise chain with\n * `nodeify(nodeback)`, forwarding the optional nodeback argument.  If the user\n * elects to use a nodeback, the result will be sent there.  If they do not\n * pass a nodeback, they will receive the result promise.\n * @param object a result (or a promise for a result)\n * @param {Function} nodeback a Node.js-style callback\n * @returns either the promise or nothing\n */\nQ.nodeify = nodeify;\nfunction nodeify(object, nodeback) {\n    return Q(object).nodeify(nodeback);\n}\n\nPromise.prototype.nodeify = function (nodeback) {\n    if (nodeback) {\n        this.then(function (value) {\n            Q.nextTick(function () {\n                nodeback(null, value);\n            });\n        }, function (error) {\n            Q.nextTick(function () {\n                nodeback(error);\n            });\n        });\n    } else {\n        return this;\n    }\n};\n\nQ.noConflict = function() {\n    throw new Error(\"Q.noConflict only works when Q is used as a global\");\n};\n\n// All code before this point will be filtered from stack traces.\nvar qEndingLine = captureLine();\n\nreturn Q;\n\n});\n"]}